{"version":3,"sources":["pages/HomePage.js","pages/RegisterPage.js","pages/PatientProfile.js","pages/SignInPage.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","navigate","useNavigate","React","createElement","className","onClick","RegisterPage","formData","setFormData","useState","fullName","address","phoneNumber","email","password","termsAccepted","selectedDoctor","doctorList","setDoctorList","id","name","maxPatients","currentPatients","handleInputChange","e","value","target","isFormValid","onSubmit","preventDefault","type","onChange","map","doctor","key","checked","disabled","PatientProfile","_ref","patient","upcomingAppointments","appointmentHistory","length","appointment","index","date","startTime","endTime","colSpan","time","SignInPage","alert","Link","to","Header","App","patientData","setPatientData","Router","basename","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2VA8BeA,MAzBf,WACE,MAAMC,EAAWC,cAEjB,OACEC,IAAAC,cAAA,OAAKC,UAAU,YAIbF,IAAAC,cAAA,WAASC,UAAU,UACjBF,IAAAC,cAAA,UAAI,0BAEND,IAAAC,cAAA,WAASC,UAAU,SACjBF,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,UAAQE,QAASA,IAAML,EAAS,cAAc,aAEhDE,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,cAAQ,gB,MC2HHG,MA7If,WACE,MAAOC,EAAUC,GAAeC,mBAAS,CACvCC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,eAAe,EACfC,eAAgB,MAGXC,EAAYC,GAAiBT,mBAAS,CAC3C,CAAEU,GAAI,EAAGC,KAAM,iBAAkBC,YAAa,GAAIC,gBAAiB,GACnE,CAAEH,GAAI,EAAGC,KAAM,oBAAqBC,YAAa,EAAGC,gBAAiB,GACrE,CAAEH,GAAI,EAAGC,KAAM,kBAAmBC,YAAa,GAAIC,gBAAiB,KAGhEtB,EAAWC,cAEXsB,EAAqBC,IACzB,MAAM,KAAEJ,EAAI,MAAEK,GAAUD,EAAEE,OAC1BlB,EAAY,IACPD,EACH,CAACa,GAAOK,KAkBNE,EACJpB,EAASG,UACTH,EAASI,SACTJ,EAASK,aACTL,EAASM,OACTN,EAASO,UACTP,EAASQ,cASX,OACEb,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,iCACJD,IAAAC,cAAA,UAAI,iCACJD,IAAAC,cAAA,QAAMC,UAAU,oBAAoBwB,SAZpBJ,IACpBA,EAAEK,iBACEF,GACF3B,EAAS,gBAULE,IAAAC,cAAA,aAAO,aAELD,IAAAC,cAAA,SACE2B,KAAK,OACLV,KAAK,WACLK,MAAOlB,EAASG,SAChBqB,SAAUR,KAGdrB,IAAAC,cAAA,aAAO,WAELD,IAAAC,cAAA,SACE2B,KAAK,OACLV,KAAK,UACLK,MAAOlB,EAASI,QAChBoB,SAAUR,KAGdrB,IAAAC,cAAA,aAAO,gBAELD,IAAAC,cAAA,SACE2B,KAAK,MACLV,KAAK,cACLK,MAAOlB,EAASK,YAChBmB,SAAUR,KAGdrB,IAAAC,cAAA,aAAO,SAELD,IAAAC,cAAA,SACE2B,KAAK,QACLV,KAAK,QACLK,MAAOlB,EAASM,MAChBkB,SAAUR,KAGdrB,IAAAC,cAAA,aAAO,YAELD,IAAAC,cAAA,SACE2B,KAAK,WACLV,KAAK,WACLK,MAAOlB,EAASO,SAChBiB,SAAUR,KAGdrB,IAAAC,cAAA,aAAO,iBAELD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UACEiB,KAAK,iBACLK,MAAOlB,EAASS,eAChBe,SA/EiBP,IAC7BhB,EAAY,IACPD,EACHS,eAAgBQ,EAAEE,OAAOD,UA8EfvB,IAAAC,cAAA,UAAQsB,MAAM,IAAG,gCAChBR,EAAWe,IAAKC,GACf/B,IAAAC,cAAA,UAAQ+B,IAAKD,EAAOd,GAAIM,MAAOQ,EAAOd,IACnCc,EAAOb,KAAK,uBAAqBa,EAAOX,gBAAgB,IAAEW,EAAOZ,YAAY,SAMxFnB,IAAAC,cAAA,SAAOC,UAAU,kBACfF,IAAAC,cAAA,SACE2B,KAAK,WACLK,QAAS5B,EAASQ,cAClBgB,SArGkBP,IAC5BhB,EAAY,IACPD,EACHQ,cAAeS,EAAEE,OAAOS,aAmGhB,sBAGJjC,IAAAC,cAAA,UAAQ2B,KAAK,SAASM,UAAWT,GAAa,gB,MCjEzCU,MArEf,SAAuBC,GAAyD,IAAxD,QAAEC,EAAO,qBAAEC,EAAoB,mBAAEC,GAAoBH,EAC3E,OAAKC,EAKHrC,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UAAI,iBAAeoC,EAAQnB,MAC3BlB,IAAAC,cAAA,UAAI,6DAEJD,IAAAC,cAAA,WAASC,UAAU,wBACjBF,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAAA,SAAOC,UAAU,sBACfF,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,UAGRD,IAAAC,cAAA,aACGqC,EAAqBE,OAAS,EAC7BF,EAAqBR,IAAI,CAACW,EAAaC,IACrC1C,IAAAC,cAAA,MAAI+B,IAAKU,GACP1C,IAAAC,cAAA,UAAKwC,EAAYV,QACjB/B,IAAAC,cAAA,UAAKwC,EAAYE,MACjB3C,IAAAC,cAAA,UAAK,GAAGwC,EAAYG,eAAeH,EAAYI,aAInD7C,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAI6C,QAAQ,KAAI,gCAO1B9C,IAAAC,cAAA,WAASC,UAAU,mBACjBF,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,SAAOC,UAAU,iBACfF,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,UAGRD,IAAAC,cAAA,aACGsC,EAAmBC,OAAS,EAC3BD,EAAmBT,IAAI,CAACW,EAAaC,IACnC1C,IAAAC,cAAA,MAAI+B,IAAKU,GACP1C,IAAAC,cAAA,UAAKwC,EAAYV,QACjB/B,IAAAC,cAAA,UAAKwC,EAAYE,MACjB3C,IAAAC,cAAA,UAAKwC,EAAYM,QAIrB/C,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAI6C,QAAQ,KAAI,+BAzDrB9C,IAAAC,cAAA,WAAK,4B,MC2DD+C,MA3Df,WACE,MAAO3C,EAAUC,GAAeC,mBAAS,CACvCI,MAAO,GACPC,SAAU,KAGNd,EAAWC,cAEXsB,EAAqBC,IACzB,MAAM,KAAEJ,EAAI,MAAEK,GAAUD,EAAEE,OAC1BlB,EAAY,IACPD,EACH,CAACa,GAAOK,KAcZ,OACEvB,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,QAAMC,UAAU,eAAewB,SAdfJ,IACpBA,EAAEK,iBAEEtB,EAASM,OAASN,EAASO,SAC7Bd,EAAS,cAETmD,MAAM,2CASFjD,IAAAC,cAAA,aAAO,SAELD,IAAAC,cAAA,SACE2B,KAAK,QACLV,KAAK,QACLK,MAAOlB,EAASM,MAChBkB,SAAUR,KAGdrB,IAAAC,cAAA,aAAO,YAELD,IAAAC,cAAA,SACE2B,KAAK,WACLV,KAAK,WACLK,MAAOlB,EAASO,SAChBiB,SAAUR,KAGdrB,IAAAC,cAAA,UAAQ2B,KAAK,UAAS,YAExB5B,IAAAC,cAAA,KAAGC,UAAU,iBAAgB,0BACNF,IAAAC,cAACiD,IAAI,CAACC,GAAG,aAAY,qB,MCrCrCC,MAhBf,WACE,OACEpD,IAAAC,cAAA,UAAQC,UAAU,UAChBF,IAAAC,cAACiD,IAAI,CAACC,GAAG,IAAIjD,UAAU,cACrBF,IAAAC,cAAA,OAAKC,UAAU,SAAQ,uBAEzBF,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACiD,IAAI,CAACC,GAAG,KAAI,QACbnD,IAAAC,cAACiD,IAAI,CAACC,GAAG,gBAAe,eACxBnD,IAAAC,cAACiD,IAAI,CAACC,GAAG,aAAY,YACrBnD,IAAAC,cAACiD,IAAI,CAACC,GAAG,UAAUjD,UAAU,eAAc,cCmCpCmD,MAxCf,WACE,MAAOC,EAAaC,GAAkBhD,mBAAS,CAC7C8B,QAAS,CAAEnB,KAAM,YACjBoB,qBAAsB,CACpB,CAAEP,OAAQ,YAAaY,KAAM,aAAcC,UAAW,WAAYC,QAAS,YAC3E,CAAEd,OAAQ,cAAeY,KAAM,aAAcC,UAAW,UAAWC,QAAS,YAE9EN,mBAAoB,CAClB,CAAER,OAAQ,YAAaY,KAAM,aAAcI,KAAM,WACjD,CAAEhB,OAAQ,YAAaY,KAAM,aAAcI,KAAM,eAIrD,OACE/C,IAAAC,cAACuD,IAAM,CAACC,SAAS,sBACfzD,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACmD,EAAM,MACPpD,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAACyD,IAAM,KACL1D,IAAAC,cAAC0D,IAAK,CAACC,KAAK,IAAIC,QAAS7D,IAAAC,cAACJ,EAAQ,QAClCG,IAAAC,cAAC0D,IAAK,CAACC,KAAK,YAAYC,QAAS7D,IAAAC,cAACG,EAAY,QAC9CJ,IAAAC,cAAC0D,IAAK,CAACC,KAAK,UAAUC,QAAS7D,IAAAC,cAAC+C,EAAU,QAAO,IACjDhD,IAAAC,cAAC0D,IAAK,CAACC,KAAK,aAAaC,QACvBP,EACEtD,IAAAC,cAACkC,EAAc,CACbE,QAASiB,EAAYjB,QACrBC,qBAAsBgB,EAAYhB,qBAClCC,mBAAoBe,EAAYf,qBAGlCvC,IAAAC,cAAA,WAAK,qBC3BN6D,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAK7B,IAAkD,IAAjD,OAAE8B,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASlC,EACpE8B,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3E,IAAAC,cAACD,IAAM4E,WAAU,KACf5E,IAAAC,cAACoD,EAAG,QAORS,M","file":"static/js/main.39decdb1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './HomePage.css';\r\nimport '../common.css';\r\n\r\nfunction HomePage() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n\r\n\r\n      {/* Slogan */}\r\n      <section className=\"slogan\">\r\n        <h1>Healthcare made easy.</h1>\r\n      </section>\r\n      <section className=\"cards\">\r\n        <div className=\"card\">\r\n          <h2>New patient</h2>\r\n          <button onClick={() => navigate('/register')}>Register</button>\r\n        </div>\r\n        <div className=\"card\">\r\n          <h2>Family Doctor</h2>\r\n          <button>Book Now</button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './RegisterPage.css';\r\nimport '../common.css';\r\n\r\nfunction RegisterPage() {\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    address: '',\r\n    phoneNumber: '',\r\n    email: '',\r\n    password: '',\r\n    termsAccepted: false,\r\n    selectedDoctor: '',\r\n  });\r\n\r\n  const [doctorList, setDoctorList] = useState([\r\n    { id: 1, name: 'Dr. John Smith', maxPatients: 10, currentPatients: 5 },\r\n    { id: 2, name: 'Dr. Sarah Johnson', maxPatients: 8, currentPatients: 8 },\r\n    { id: 3, name: 'Dr. Emily Brown', maxPatients: 12, currentPatients: 3 },\r\n  ]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      termsAccepted: e.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleDoctorSelection = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      selectedDoctor: e.target.value,\r\n    });\r\n  };\r\n\r\n  const isFormValid =\r\n    formData.fullName &&\r\n    formData.address &&\r\n    formData.phoneNumber &&\r\n    formData.email &&\r\n    formData.password &&\r\n    formData.termsAccepted;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (isFormValid) {\r\n      navigate('/myprofile'); // Navigating directly to the profile page\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      <div className=\"form-container\">\r\n        <h1>New Patient Registration Form</h1>\r\n        <h2>Welcome to Destination Health</h2>\r\n        <form className=\"registration-form\" onSubmit={handleSubmit}>\r\n          <label>\r\n            Full Name:\r\n            <input\r\n              type=\"text\"\r\n              name=\"fullName\"\r\n              value={formData.fullName}\r\n              onChange={handleInputChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Address:\r\n            <input\r\n              type=\"text\"\r\n              name=\"address\"\r\n              value={formData.address}\r\n              onChange={handleInputChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Phone Number:\r\n            <input\r\n              type=\"tel\"\r\n              name=\"phoneNumber\"\r\n              value={formData.phoneNumber}\r\n              onChange={handleInputChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Email:\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleInputChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Password:\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Select Doctor:\r\n            <div className=\"custom-select\">\r\n              <select \r\n                name=\"selectedDoctor\" \r\n                value={formData.selectedDoctor} \r\n                onChange={handleDoctorSelection}\r\n              >\r\n                <option value=\"\">-- Please Select a Doctor --</option>\r\n                {doctorList.map((doctor) => (\r\n                  <option key={doctor.id} value={doctor.id}>\r\n                    {doctor.name} (Current Patients: {doctor.currentPatients}/{doctor.maxPatients})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </label>\r\n          <label className=\"terms-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={formData.termsAccepted}\r\n              onChange={handleCheckboxChange}\r\n            />\r\n            I accept the terms\r\n          </label>\r\n          <button type=\"submit\" disabled={!isFormValid}>\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport './PatientProfile.css';\r\n\r\nfunction PatientProfile({ patient, upcomingAppointments, appointmentHistory }) {\r\n  if (!patient) {\r\n    return <div>Loading patient data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"patient-profile\">\r\n      <h1>Welcome back, {patient.name}</h1>\r\n      <h2>Welcome to Destination Health. How can we help you today?</h2>\r\n\r\n      <section className=\"appointments-section\">\r\n        <h3>Upcoming Appointments</h3>\r\n        <table className=\"appointments-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Doctor</th>\r\n              <th>Date</th>\r\n              <th>Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {upcomingAppointments.length > 0 ? (\r\n              upcomingAppointments.map((appointment, index) => (\r\n                <tr key={index}>\r\n                  <td>{appointment.doctor}</td>\r\n                  <td>{appointment.date}</td>\r\n                  <td>{`${appointment.startTime} - ${appointment.endTime}`}</td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"3\">No upcoming appointments</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n\r\n      <section className=\"history-section\">\r\n        <h3>Appointment History</h3>\r\n        <table className=\"history-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Doctor</th>\r\n              <th>Date</th>\r\n              <th>Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {appointmentHistory.length > 0 ? (\r\n              appointmentHistory.map((appointment, index) => (\r\n                <tr key={index}>\r\n                  <td>{appointment.doctor}</td>\r\n                  <td>{appointment.date}</td>\r\n                  <td>{appointment.time}</td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"3\">No appointment history</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientProfile;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport './SignInPage.css';\r\nimport '../common.css';\r\n\r\nfunction SignInPage() {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // For now, simulate successful sign-in without connecting to a backend\r\n    if (formData.email && formData.password) {\r\n      navigate('/myprofile');\r\n    } else {\r\n      alert('Please enter both email and password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in-page\">\r\n      <div className=\"form-container\">\r\n        <h1>Sign In</h1>\r\n        <form className=\"sign-in-form\" onSubmit={handleSubmit}>\r\n          <label>\r\n            Email:\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleInputChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Password:\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Sign In</button>\r\n        </form>\r\n        <p className=\"register-link\">\r\n        Don't have an account? <Link to=\"/register\">Register here</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <Link to=\"/\" className=\"title-link\">\r\n        <div className=\"title\">Destination Health</div>\r\n      </Link>\r\n      <nav className=\"nav\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"#how-to-book\">How to book</Link>\r\n        <Link to=\"#about-us\">About us</Link>\r\n        <Link to=\"/signin\" className=\"sign-in-btn\">Sign in</Link>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport HomePage from './pages/HomePage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport PatientProfile from './pages/PatientProfile';\r\nimport SignInPage from './pages/SignInPage'; \r\nimport './common.css';\r\nimport Header from './components/Header';\r\n\r\nfunction App() {\r\n  const [patientData, setPatientData] = useState({\r\n    patient: { name: \"John Doe\" },\r\n    upcomingAppointments: [\r\n      { doctor: \"Dr. Smith\", date: \"2023-05-15\", startTime: \"10:00 AM\", endTime: \"11:00 AM\" },\r\n      { doctor: \"Dr. Johnson\", date: \"2023-05-20\", startTime: \"2:00 PM\", endTime: \"3:00 PM\" },\r\n    ],\r\n    appointmentHistory: [\r\n      { doctor: \"Dr. Brown\", date: \"2023-04-10\", time: \"9:00 AM\" },\r\n      { doctor: \"Dr. Davis\", date: \"2023-03-22\", time: \"11:30 AM\" },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <Router basename=\"/Capstone-Project-\">\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"main-content\">\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomePage />} />\r\n            <Route path=\"/register\" element={<RegisterPage />} />\r\n            <Route path=\"/signin\" element={<SignInPage />} /> {/* Add SignInPage route */}\r\n            <Route path=\"/myprofile\" element={\r\n              patientData ? (\r\n                <PatientProfile\r\n                  patient={patientData.patient}\r\n                  upcomingAppointments={patientData.upcomingAppointments}\r\n                  appointmentHistory={patientData.appointmentHistory}\r\n                />\r\n              ) : (\r\n                <div>Loading...</div>\r\n              )\r\n            } />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}