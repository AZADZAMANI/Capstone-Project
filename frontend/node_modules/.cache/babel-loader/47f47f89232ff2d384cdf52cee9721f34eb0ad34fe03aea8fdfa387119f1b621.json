{"ast":null,"code":"var _jsxFileName = \"/home/parisa/dhProject/frontend/src/pages/SignInPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './SignInPage.css';\nimport '../common.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignInPage() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // For now, simulate successful sign-in without connecting to a backend\n    if (formData.email && formData.password) {\n      navigate('/myprofile');\n    } else {\n      alert('Please enter both email and password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sign-in-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"register-link\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Register here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(SignInPage, \"rMp78YZBWNTZeFnLKGK54TI8qxs=\", false, function () {\n  return [useNavigate];\n});\n_c = SignInPage;\nexport default SignInPage;\nvar _c;\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"names":["React","useState","useNavigate","Link","jsxDEV","_jsxDEV","SignInPage","_s","formData","setFormData","email","password","navigate","handleInputChange","e","name","value","target","handleSubmit","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","to","_c","$RefreshReg$"],"sources":["/home/parisa/dhProject/frontend/src/pages/SignInPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './SignInPage.css';\nimport '../common.css';\n\nfunction SignInPage() {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const navigate = useNavigate();\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // For now, simulate successful sign-in without connecting to a backend\n    if (formData.email && formData.password) {\n      navigate('/myprofile');\n    } else {\n      alert('Please enter both email and password.');\n    }\n  };\n\n  return (\n    <div className=\"sign-in-page\">\n      <div className=\"form-container\">\n        <h1>Sign In</h1>\n        <form className=\"sign-in-form\" onSubmit={handleSubmit}>\n          <label>\n            Email:\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n            />\n          </label>\n          <label>\n            Password:\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleInputChange}\n            />\n          </label>\n          <button type=\"submit\">Sign In</button>\n        </form>\n        <p className=\"register-link\">\n        Don't have an account? <Link to=\"/register\">Register here</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SignInPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}