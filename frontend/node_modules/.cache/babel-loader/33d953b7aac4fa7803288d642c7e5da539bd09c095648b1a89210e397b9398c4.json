{"ast":null,"code":"var _jsxFileName = \"/home/parisa/dhProject/frontend/src/pages/BookAppointmentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './BookAppointmentPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookAppointmentPage() {\n  _s();\n  const [selectedDayIndex, setSelectedDayIndex] = useState(null);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [weekData, setWeekData] = useState([]);\n  const navigate = useNavigate();\n  const doctorName = 'Dr. John Smith'; // Mock doctor's name\n\n  useEffect(() => {\n    // Generate mock data for the upcoming week (7 days, 8 hours each day)\n    const generatedWeekData = Array.from({\n      length: 7\n    }, (_, index) => {\n      const date = new Date();\n      date.setDate(date.getDate() + index);\n      const day = date.toLocaleDateString('en-US', {\n        weekday: 'long'\n      });\n      const formattedDate = date.toISOString().split('T')[0]; // yyyy-MM-dd format\n\n      return {\n        day,\n        date: formattedDate,\n        hours: Array.from({\n          length: 8\n        }, (_, hourIndex) => {\n          const time = `${9 + hourIndex}:00 AM`;\n          return {\n            time,\n            available: Math.random() > 0.3 // Random availability for mock data\n          };\n        })\n      };\n    });\n    setWeekData(generatedWeekData);\n  }, []);\n  const handleDaySelection = index => {\n    setSelectedDayIndex(index);\n    setSelectedSlot(null); // Clear the selected slot when selecting a new day\n  };\n  const handleSlotSelection = time => {\n    if (selectedDayIndex !== null) {\n      setSelectedSlot({\n        day: weekData[selectedDayIndex].day,\n        time\n      });\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (selectedSlot) {\n      console.log('Selected Slot:', selectedSlot);\n      // Navigate to profile page\n      navigate('/myprofile');\n    } else {\n      alert('Please select a time slot.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-appointment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Book an Appointment with \", doctorName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-selection-container\",\n      children: weekData.map((dayData, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `day-card ${selectedDayIndex === dayIndex ? 'selected-day' : ''}`,\n        onClick: () => handleDaySelection(dayIndex),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: dayData.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dayData.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, dayIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hours-selection-container\",\n      children: Array.from({\n        length: 8\n      }, (_, hourIndex) => {\n        if (selectedDayIndex !== null) {\n          const hourData = weekData[selectedDayIndex].hours[hourIndex];\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `hour-card ${hourData.available ? 'available' : 'taken'} ${(selectedSlot === null || selectedSlot === void 0 ? void 0 : selectedSlot.time) === hourData.time ? 'selected-slot' : ''}`,\n            onClick: () => hourData.available && handleSlotSelection(hourData.time),\n            disabled: !hourData.available,\n            children: hourData.time\n          }, hourIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"hour-card disabled\",\n            disabled: true,\n            children: `${9 + hourIndex}:00 AM`\n          }, hourIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(BookAppointmentPage, \"Vx638nIKO7fb9N9H1a68XWvxJD8=\", false, function () {\n  return [useNavigate];\n});\n_c = BookAppointmentPage;\nexport default BookAppointmentPage;\nvar _c;\n$RefreshReg$(_c, \"BookAppointmentPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","BookAppointmentPage","_s","selectedDayIndex","setSelectedDayIndex","selectedSlot","setSelectedSlot","weekData","setWeekData","navigate","doctorName","generatedWeekData","Array","from","length","_","index","date","Date","setDate","getDate","day","toLocaleDateString","weekday","formattedDate","toISOString","split","hours","hourIndex","time","available","Math","random","handleDaySelection","handleSlotSelection","handleSubmit","e","preventDefault","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dayData","dayIndex","onClick","hourData","type","disabled","onSubmit","_c","$RefreshReg$"],"sources":["/home/parisa/dhProject/frontend/src/pages/BookAppointmentPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './BookAppointmentPage.css';\n\nfunction BookAppointmentPage() {\n  const [selectedDayIndex, setSelectedDayIndex] = useState(null);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [weekData, setWeekData] = useState([]);\n  const navigate = useNavigate();\n\n  const doctorName = 'Dr. John Smith'; // Mock doctor's name\n\n  useEffect(() => {\n    // Generate mock data for the upcoming week (7 days, 8 hours each day)\n    const generatedWeekData = Array.from({ length: 7 }, (_, index) => {\n      const date = new Date();\n      date.setDate(date.getDate() + index);\n      const day = date.toLocaleDateString('en-US', { weekday: 'long' });\n      const formattedDate = date.toISOString().split('T')[0]; // yyyy-MM-dd format\n\n      return {\n        day,\n        date: formattedDate,\n        hours: Array.from({ length: 8 }, (_, hourIndex) => {\n          const time = `${9 + hourIndex}:00 AM`;\n          return {\n            time,\n            available: Math.random() > 0.3, // Random availability for mock data\n          };\n        }),\n      };\n    });\n    setWeekData(generatedWeekData);\n  }, []);\n\n  const handleDaySelection = (index) => {\n    setSelectedDayIndex(index);\n    setSelectedSlot(null); // Clear the selected slot when selecting a new day\n  };\n\n  const handleSlotSelection = (time) => {\n    if (selectedDayIndex !== null) {\n      setSelectedSlot({ day: weekData[selectedDayIndex].day, time });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (selectedSlot) {\n      console.log('Selected Slot:', selectedSlot);\n      // Navigate to profile page\n      navigate('/myprofile');\n    } else {\n      alert('Please select a time slot.');\n    }\n  };\n\n  return (\n    <div className=\"book-appointment-page\">\n      <h1>Book an Appointment with {doctorName}</h1>\n      <div className=\"day-selection-container\">\n        {weekData.map((dayData, dayIndex) => (\n          <div\n            key={dayIndex}\n            className={`day-card ${selectedDayIndex === dayIndex ? 'selected-day' : ''}`}\n            onClick={() => handleDaySelection(dayIndex)}\n          >\n            <p>{dayData.day}</p>\n            <p>{dayData.date}</p>\n          </div>\n        ))}\n      </div>\n      <div className=\"hours-selection-container\">\n        {Array.from({ length: 8 }, (_, hourIndex) => {\n          if (selectedDayIndex !== null) {\n            const hourData = weekData[selectedDayIndex].hours[hourIndex];\n            return (\n              <button\n                key={hourIndex}\n                type=\"button\"\n                className={`hour-card ${hourData.available ? 'available' : 'taken'} ${selectedSlot?.time === hourData.time ? 'selected-slot' : ''}`}\n                onClick={() => hourData.available && handleSlotSelection(hourData.time)}\n                disabled={!hourData.available}\n              >\n                {hourData.time}\n              </button>\n            );\n          } else {\n            return (\n              <button\n                key={hourIndex}\n                type=\"button\"\n                className=\"hour-card disabled\"\n                disabled\n              >\n                {`${9 + hourIndex}:00 AM`}\n              </button>\n            );\n          }\n        })}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"submit-btn\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default BookAppointmentPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}